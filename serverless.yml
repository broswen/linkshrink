service: linkshrink

frameworkVersion: "2"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  region: us-east-1

  stage: ${opt:stage, 'dev'}

  apiGateway:
    apiKeys:
      - linkshrink-test
    usagePlan:
      throttle:
        burstLimit: 5
        rateLimit: 1

  runtime: nodejs12.x
  memorySize: 128
  timeout: 3

  lambdaHashingVersion: "20201221"

  environment:
    STAGE: ${self:provider.stage}
    LINKSTABLE: !Ref LinksTable
    CLICKEVENTSSTREAM: !Ref ClickEventsStream
    GLUEDB: !Ref LinkShrinkDatabase

functions:
  CreateLink:
    handler: src/lambdas/CreateLink.handler
    role: !GetAtt RestApiRole.Arn
    events:
      - http:
          path: /link
          method: post
          cors: true
          private: true

  GetLink:
    handler: src/lambdas/GetLink.handler
    role: !GetAtt RestApiRole.Arn
    events:
      - http:
          path: /{slug}
          method: get
          cors: true

  GetLinkInfo:
    handler: src/lambdas/GetLinkInfo.handler
    role: !GetAtt RestApiRole.Arn
    events:
      - http:
          path: /link/{slug}
          method: get
          cors: true
          private: true

  DeliveryStreamProcessor:
    handler: src/lambdas/DeliveryStreamProcessor.handler
    role: !GetAtt DeliveryStreamProcessorRole.Arn
    timeout: 60

resources:
  - ${file(./cfn-resources/s3-resources.yml)}
  - ${file(./cfn-resources/iam-resources.yml)}
  - ${file(./cfn-resources/dynamodb-resources.yml)}
  - ${file(./cfn-resources/kinesis-resources.yml)}
  - ${file(./cfn-resources/glue-resources.yml)}
